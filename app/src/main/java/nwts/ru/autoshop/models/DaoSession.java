package nwts.ru.autoshop.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import nwts.ru.autoshop.models.CategoryItem;
import nwts.ru.autoshop.models.GetCache;
import nwts.ru.autoshop.models.ProductCategory;
import nwts.ru.autoshop.models.ProductDetailImage;
import nwts.ru.autoshop.models.SubCategoryItem;

import nwts.ru.autoshop.models.CategoryItemDao;
import nwts.ru.autoshop.models.GetCacheDao;
import nwts.ru.autoshop.models.ProductCategoryDao;
import nwts.ru.autoshop.models.ProductDetailImageDao;
import nwts.ru.autoshop.models.SubCategoryItemDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryItemDaoConfig;
    private final DaoConfig getCacheDaoConfig;
    private final DaoConfig productCategoryDaoConfig;
    private final DaoConfig productDetailImageDaoConfig;
    private final DaoConfig subCategoryItemDaoConfig;

    private final CategoryItemDao categoryItemDao;
    private final GetCacheDao getCacheDao;
    private final ProductCategoryDao productCategoryDao;
    private final ProductDetailImageDao productDetailImageDao;
    private final SubCategoryItemDao subCategoryItemDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryItemDaoConfig = daoConfigMap.get(CategoryItemDao.class).clone();
        categoryItemDaoConfig.initIdentityScope(type);

        getCacheDaoConfig = daoConfigMap.get(GetCacheDao.class).clone();
        getCacheDaoConfig.initIdentityScope(type);

        productCategoryDaoConfig = daoConfigMap.get(ProductCategoryDao.class).clone();
        productCategoryDaoConfig.initIdentityScope(type);

        productDetailImageDaoConfig = daoConfigMap.get(ProductDetailImageDao.class).clone();
        productDetailImageDaoConfig.initIdentityScope(type);

        subCategoryItemDaoConfig = daoConfigMap.get(SubCategoryItemDao.class).clone();
        subCategoryItemDaoConfig.initIdentityScope(type);

        categoryItemDao = new CategoryItemDao(categoryItemDaoConfig, this);
        getCacheDao = new GetCacheDao(getCacheDaoConfig, this);
        productCategoryDao = new ProductCategoryDao(productCategoryDaoConfig, this);
        productDetailImageDao = new ProductDetailImageDao(productDetailImageDaoConfig, this);
        subCategoryItemDao = new SubCategoryItemDao(subCategoryItemDaoConfig, this);

        registerDao(CategoryItem.class, categoryItemDao);
        registerDao(GetCache.class, getCacheDao);
        registerDao(ProductCategory.class, productCategoryDao);
        registerDao(ProductDetailImage.class, productDetailImageDao);
        registerDao(SubCategoryItem.class, subCategoryItemDao);
    }
    
    public void clear() {
        categoryItemDaoConfig.clearIdentityScope();
        getCacheDaoConfig.clearIdentityScope();
        productCategoryDaoConfig.clearIdentityScope();
        productDetailImageDaoConfig.clearIdentityScope();
        subCategoryItemDaoConfig.clearIdentityScope();
    }

    public CategoryItemDao getCategoryItemDao() {
        return categoryItemDao;
    }

    public GetCacheDao getGetCacheDao() {
        return getCacheDao;
    }

    public ProductCategoryDao getProductCategoryDao() {
        return productCategoryDao;
    }

    public ProductDetailImageDao getProductDetailImageDao() {
        return productDetailImageDao;
    }

    public SubCategoryItemDao getSubCategoryItemDao() {
        return subCategoryItemDao;
    }

}
